{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport iziToast from 'izitoast';\nimport { refsTimer } from './refs.js';\n\nconst { input, days, hours, minutes, seconds, btnStart } = refsTimer;\n\nlet userSelectedDate = null;\nlet interval = null;\n\nflatpickr(input, {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    const selectDate = selectedDates[0];\n\n    if (selectDate < new Date()) {\n      iziToast.error({\n        message: 'Please choose a date in the future',\n        position: 'topRight',\n      });\n\n      btnStart.setAttribute('disabled', 'true');\n    } else {\n      userSelectedDate = selectDate;\n      btnStart.removeAttribute('disabled');\n    }\n  },\n});\n\nbtnStart.addEventListener('click', () => {\n  start();\n});\n\nfunction start() {\n  interval = setInterval(() => {\n    const diff = userSelectedDate - Date.now();\n    btnStart.setAttribute('disabled', '');\n    input.setAttribute('disabled', '');\n\n    if (diff < 0) {\n      input.removeAttribute('disabled');\n      btnStart.removeAttribute('disabled');\n\n      stop();\n      return;\n    }\n\n    const timeComponent = convertMs(diff);\n\n    days.textContent = pad(timeComponent.days);\n    hours.textContent = pad(timeComponent.hours);\n    minutes.textContent = pad(timeComponent.minutes);\n    seconds.textContent = pad(timeComponent.seconds);\n  }, 1000);\n}\n\nfunction stop() {\n  clearInterval(interval);\n\n  days.textContent = '00';\n  hours.textContent = '00';\n  minutes.textContent = '00';\n  seconds.textContent = '00';\n}\n\nfunction pad(value) {\n  return String(value).padStart(2, '0');\n}\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n"],"names":["input","days","hours","minutes","seconds","btnStart","refsTimer","userSelectedDate","interval","flatpickr","selectedDates","selectDate","iziToast","start","diff","stop","timeComponent","convertMs","pad","value","ms"],"mappings":"yIAIA,KAAM,CAAE,MAAAA,EAAO,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,EAAS,SAAAC,CAAU,EAAGC,EAE3D,IAAIC,EAAmB,KACnBC,EAAW,KAEfC,EAAUT,EAAO,CACf,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQU,EAAe,CACrB,MAAMC,EAAaD,EAAc,CAAC,EAE9BC,EAAa,IAAI,MACnBC,EAAS,MAAM,CACb,QAAS,qCACT,SAAU,UAClB,CAAO,EAEDP,EAAS,aAAa,WAAY,MAAM,IAExCE,EAAmBI,EACnBN,EAAS,gBAAgB,UAAU,EAEtC,CACH,CAAC,EAEDA,EAAS,iBAAiB,QAAS,IAAM,CACvCQ,GACF,CAAC,EAED,SAASA,GAAQ,CACfL,EAAW,YAAY,IAAM,CAC3B,MAAMM,EAAOP,EAAmB,KAAK,IAAG,EAIxC,GAHAF,EAAS,aAAa,WAAY,EAAE,EACpCL,EAAM,aAAa,WAAY,EAAE,EAE7Bc,EAAO,EAAG,CACZd,EAAM,gBAAgB,UAAU,EAChCK,EAAS,gBAAgB,UAAU,EAEnCU,IACA,MACD,CAED,MAAMC,EAAgBC,EAAUH,CAAI,EAEpCb,EAAK,YAAciB,EAAIF,EAAc,IAAI,EACzCd,EAAM,YAAcgB,EAAIF,EAAc,KAAK,EAC3Cb,EAAQ,YAAce,EAAIF,EAAc,OAAO,EAC/CZ,EAAQ,YAAcc,EAAIF,EAAc,OAAO,CAChD,EAAE,GAAI,CACT,CAEA,SAASD,GAAO,CACd,cAAcP,CAAQ,EAEtBP,EAAK,YAAc,KACnBC,EAAM,YAAc,KACpBC,EAAQ,YAAc,KACtBC,EAAQ,YAAc,IACxB,CAEA,SAASc,EAAIC,EAAO,CAClB,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC,CAEA,SAASF,EAAUG,EAAI,CAQrB,MAAMnB,EAAO,KAAK,MAAMmB,EAAK,KAAG,EAE1BlB,EAAQ,KAAK,MAAOkB,EAAK,MAAO,IAAI,EAEpCjB,EAAU,KAAK,MAAQiB,EAAK,MAAO,KAAQ,GAAM,EAEjDhB,EAAU,KAAK,MAASgB,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAnB,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC"}